/*
     * Complete the 'reversePrint' function below.
     *
     * The function accepts INTEGER_SINGLY_LINKED_LIST llist as parameter.
     */

    /*
     * For your reference:
     *
     * SinglyLinkedListNode {
     *     int data;
     *     SinglyLinkedListNode next;
     * }
     *
     */

    public static void reversePrint(SinglyLinkedListNode llist) {
    // Write your code here
    if (llist == null){ // instead of llist, we could also use head, however parameter up 
//using llist 
        return; 
        
    }
    
    // can't do it without a STACK Data structure
    //use a stack
    
    Stack <SinglyLinkedListNode> stack = new Stack(); 
    
    SinglyLinkedListNode current_node = llist; //always keep reference to head
    
    //STACK = LIFO 
    
    while (current_node != null){
        stack.add(current_node);
        current_node = current_node.next; // looping through stack of linkedlist 
        
    }
    // now we can move backward and print in that order
    
    while (!stack.isEmpty()){
        SinglyLinkedListNode node = stack.pop();
        System.out.println(node.data); 
        
        
    }

}
